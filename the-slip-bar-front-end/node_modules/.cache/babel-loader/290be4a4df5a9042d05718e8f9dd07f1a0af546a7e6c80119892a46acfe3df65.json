{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import JobList from'./JobList';import JobDetails from'./JobDetail';// Assuming JobDetails component exists\nimport'../styles/JobsPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function JobsPage(){const[jobs,setJobs]=useState([]);const[filteredJobs,setFilteredJobs]=useState([]);const[locationFilter,setLocationFilter]=useState('');const[selectedJob,setSelectedJob]=useState(null);useEffect(()=>{const fetchJobs=async()=>{try{const response=await axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/jobs\"));setJobs(response.data);setFilteredJobs(response.data);}catch(error){console.error('Error fetching jobs:',error);}};fetchJobs();},[]);useEffect(()=>{if(locationFilter){const filtered=jobs.filter(job=>job.location===locationFilter);setFilteredJobs(filtered);}else{setFilteredJobs(jobs);}},[locationFilter,jobs]);const handleJobClick=job=>{setSelectedJob(job);};return/*#__PURE__*/_jsxs(\"div\",{className:\"jobs-page\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"page-title\",children:\"Come Join Us!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"filter-section\",children:/*#__PURE__*/_jsxs(\"select\",{value:locationFilter,onChange:e=>setLocationFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Locations\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Lomita\",children:\"Lomita\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Redondo Beach\",children:\"Redondo Beach\"})]})}),/*#__PURE__*/_jsx(JobList,{jobs:filteredJobs,onJobClick:handleJobClick}),selectedJob?/*#__PURE__*/_jsx(JobDetails,{job:selectedJob}):null]});}export default JobsPage;","map":{"version":3,"names":["React","useState","useEffect","axios","JobList","JobDetails","jsx","_jsx","jsxs","_jsxs","JobsPage","jobs","setJobs","filteredJobs","setFilteredJobs","locationFilter","setLocationFilter","selectedJob","setSelectedJob","fetchJobs","response","get","concat","process","env","REACT_APP_API_URL","data","error","console","filtered","filter","job","location","handleJobClick","className","children","value","onChange","e","target","onJobClick"],"sources":["/home/shangita/Desktop/the-slip-bar-2024/the-slip-bar-2024/the-slip-bar-2024/the-slip-bar-react-webpage/src/components/JobsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport JobList from './JobList';\nimport JobDetails from './JobDetail'; // Assuming JobDetails component exists\nimport '../styles/JobsPage.css';\n\nfunction JobsPage() {\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [locationFilter, setLocationFilter] = useState('');\n  const [selectedJob, setSelectedJob] = useState(null);\n\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/jobs`);\n        setJobs(response.data);\n        setFilteredJobs(response.data);\n      } catch (error) {\n        console.error('Error fetching jobs:', error);\n      }\n    };\n\n    fetchJobs();\n  }, []);\n\n  useEffect(() => {\n    if (locationFilter) {\n      const filtered = jobs.filter(job => job.location === locationFilter);\n      setFilteredJobs(filtered);\n    } else {\n      setFilteredJobs(jobs);\n    }\n  }, [locationFilter, jobs]);\n\n  const handleJobClick = (job) => {\n    setSelectedJob(job);\n  };\n\n  return (\n    <div className=\"jobs-page\">\n      <h2 className=\"page-title\">Come Join Us!</h2>\n      <div className=\"filter-section\">\n        <select value={locationFilter} onChange={(e) => setLocationFilter(e.target.value)}>\n          <option value=\"\">All Locations</option>\n          <option value=\"Lomita\">Lomita</option>\n          <option value=\"Redondo Beach\">Redondo Beach</option>\n        </select>\n      </div>\n      <JobList jobs={filteredJobs} onJobClick={handleJobClick} />\n      {selectedJob ? <JobDetails job={selectedJob} /> : null}\n    </div>\n  );\n}\n\nexport default JobsPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,UAAU,KAAM,aAAa,CAAE;AACtC,MAAO,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACY,YAAY,CAAEC,eAAe,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACc,cAAc,CAAEC,iBAAiB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACgB,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAEpDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAjB,KAAK,CAACkB,GAAG,IAAAC,MAAA,CAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,SAAO,CAAC,CACzEb,OAAO,CAACQ,QAAQ,CAACM,IAAI,CAAC,CACtBZ,eAAe,CAACM,QAAQ,CAACM,IAAI,CAAC,CAChC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAEDR,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAENjB,SAAS,CAAC,IAAM,CACd,GAAIa,cAAc,CAAE,CAClB,KAAM,CAAAc,QAAQ,CAAGlB,IAAI,CAACmB,MAAM,CAACC,GAAG,EAAIA,GAAG,CAACC,QAAQ,GAAKjB,cAAc,CAAC,CACpED,eAAe,CAACe,QAAQ,CAAC,CAC3B,CAAC,IAAM,CACLf,eAAe,CAACH,IAAI,CAAC,CACvB,CACF,CAAC,CAAE,CAACI,cAAc,CAAEJ,IAAI,CAAC,CAAC,CAE1B,KAAM,CAAAsB,cAAc,CAAIF,GAAG,EAAK,CAC9Bb,cAAc,CAACa,GAAG,CAAC,CACrB,CAAC,CAED,mBACEtB,KAAA,QAAKyB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB5B,IAAA,OAAI2B,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,eAAa,CAAI,CAAC,cAC7C5B,IAAA,QAAK2B,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7B1B,KAAA,WAAQ2B,KAAK,CAAErB,cAAe,CAACsB,QAAQ,CAAGC,CAAC,EAAKtB,iBAAiB,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAAD,QAAA,eAChF5B,IAAA,WAAQ6B,KAAK,CAAC,EAAE,CAAAD,QAAA,CAAC,eAAa,CAAQ,CAAC,cACvC5B,IAAA,WAAQ6B,KAAK,CAAC,QAAQ,CAAAD,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtC5B,IAAA,WAAQ6B,KAAK,CAAC,eAAe,CAAAD,QAAA,CAAC,eAAa,CAAQ,CAAC,EAC9C,CAAC,CACN,CAAC,cACN5B,IAAA,CAACH,OAAO,EAACO,IAAI,CAAEE,YAAa,CAAC2B,UAAU,CAAEP,cAAe,CAAE,CAAC,CAC1DhB,WAAW,cAAGV,IAAA,CAACF,UAAU,EAAC0B,GAAG,CAAEd,WAAY,CAAE,CAAC,CAAG,IAAI,EACnD,CAAC,CAEV,CAEA,cAAe,CAAAP,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}