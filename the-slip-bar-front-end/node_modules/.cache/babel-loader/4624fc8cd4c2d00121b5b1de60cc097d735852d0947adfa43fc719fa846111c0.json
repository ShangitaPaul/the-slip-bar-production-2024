{"ast":null,"code":"var _jsxFileName = \"/home/shangita/Desktop/the-slip-bar-2024/the-slip-bar-2024/the-slip-bar-2024/the-slip-bar-react-webpage/src/components/ScrollToTopButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/ScrollToTopButton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollToTopButton = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  const handleScroll = () => {\n    const scrollThreshold = window.innerHeight; // Set scroll threshold to entire page height\n    if (window.pageYOffset > scrollThreshold) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `scroll-to-top ${isVisible ? \"visible\" : \"hidden\"}`,\n    onClick: scrollToTop,\n    style: {\n      left: \"0\",\n      bottom: \"20px\"\n    } // Adjusted to touch the left side of the page\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      stroke: \"white\" // Changed to white color\n      ,\n      strokeWidth: \"2\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      className: \"feather feather-chevron-up\" // Changed class name to indicate a chevron icon\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n        points: \"18 15 12 9 6 15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollToTopButton, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n_c = ScrollToTopButton;\nexport default ScrollToTopButton;\nvar _c;\n$RefreshReg$(_c, \"ScrollToTopButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ScrollToTopButton","_s","isVisible","setIsVisible","scrollToTop","window","scrollTo","top","behavior","handleScroll","scrollThreshold","innerHeight","pageYOffset","addEventListener","removeEventListener","className","onClick","style","left","bottom","children","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shangita/Desktop/the-slip-bar-2024/the-slip-bar-2024/the-slip-bar-2024/the-slip-bar-react-webpage/src/components/ScrollToTopButton.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/ScrollToTopButton.css\";\n\nconst ScrollToTopButton = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  const handleScroll = () => {\n    const scrollThreshold = window.innerHeight; // Set scroll threshold to entire page height\n    if (window.pageYOffset > scrollThreshold) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return (\n    <div\n      className={`scroll-to-top ${isVisible ? \"visible\" : \"hidden\"}`}\n      onClick={scrollToTop}\n      style={{ left: \"0\", bottom: \"20px\" }} // Adjusted to touch the left side of the page\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"white\" // Changed to white color\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        className=\"feather feather-chevron-up\" // Changed class name to indicate a chevron icon\n      >\n        <polyline points=\"18 15 12 9 6 15\"></polyline> \n      </svg>\n    </div>\n  );\n};\n\nexport default ScrollToTopButton;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBC,MAAM,CAACC,QAAQ,CAAC;MACdC,GAAG,EAAE,CAAC;MACNC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,eAAe,GAAGL,MAAM,CAACM,WAAW,CAAC,CAAC;IAC5C,IAAIN,MAAM,CAACO,WAAW,GAAGF,eAAe,EAAE;MACxCP,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEDN,SAAS,CAAC,MAAM;IACdQ,MAAM,CAACQ,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IAC/C,OAAO,MAAM;MACXJ,MAAM,CAACS,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IACEgB,SAAS,EAAG,iBAAgBb,SAAS,GAAG,SAAS,GAAG,QAAS,EAAE;IAC/Dc,OAAO,EAAEZ,WAAY;IACrBa,KAAK,EAAE;MAAEC,IAAI,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAO,CAAE,CAAC;IAAA;IAAAC,QAAA,eAEtCrB,OAAA;MACEsB,KAAK,EAAC,4BAA4B;MAClCC,OAAO,EAAC,WAAW;MACnBC,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,OAAO,CAAC;MAAA;MACfC,WAAW,EAAC,GAAG;MACfC,aAAa,EAAC,OAAO;MACrBC,cAAc,EAAC,OAAO;MACtBZ,SAAS,EAAC,4BAA4B,CAAC;MAAA;MAAAK,QAAA,eAEvCrB,OAAA;QAAU6B,MAAM,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA9CID,iBAAiB;AAAAiC,EAAA,GAAjBjC,iBAAiB;AAgDvB,eAAeA,iBAAiB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}